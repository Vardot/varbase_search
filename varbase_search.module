<?php

/**
 * @file
 * Display Suite core functions.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_form_entity_view_display_edit_form_alter().
 */
function varbase_search_form_entity_view_display_edit_form_alter(&$form, FormStateInterface $form_state) {

  // Apply the config for view modes inventory form entity view display.
  $form['actions']['submit']['#submit'][] = '_varbase_search_form_entity_view_display_edit_form_submit';
}

/**
 * Apply mapped view modes inventory form entity view display edit form submit.
 */
function _varbase_search_form_entity_view_display_edit_form_submit($form, FormStateInterface $form_state) {
  if (isset($form['modes']['display_modes_custom'])) {

    // Bundle name.
    $bundle_name = $form['#bundle'];

    // Enabled view modes.
    $enabled_view_modes = $form['modes']['display_modes_custom']['#default_value'];

    // Current selected view modes.
    $selected_view_modes = $form['modes']['display_modes_custom']['#value'];

    // Search view mode.
    $view_modes = ['search_result'];

    // View mode template.
    $config_template_file = '/src/assets/config_templates/CONTENT_TYPE_NAME/core.entity_view_display.node.CONTENT_TYPE_NAME.search_result.yml';

    foreach ($selected_view_modes as $selected_view_mode) {

      // Only when we do hava a new selected view mode inventory.
      if (!in_array($selected_view_mode, $enabled_view_modes) && in_array($selected_view_mode, $view_modes)) {

        // Replace CONTENT_TYPE_NAME with the bundle name for the config name.
        $real_config_name = str_replace('CONTENT_TYPE_NAME', $bundle_name, 'core.entity_view_display.node.CONTENT_TYPE_NAME.search_result');
        $view_mode_config = \Drupal::configFactory()->getEditable($real_config_name);

        // Load the config template.
        $module_path = \Drupal::modulehandler()->getModule('varbase_search')->getPath();
        $full_config_template_file = DRUPAL_ROOT . '/' . $module_path . $config_template_file;
        $config_template_content = file_get_contents($full_config_template_file);

        // Replace CONTENT_TYPE_NAME with the bundle name in config template.
        $real_config_template_content = str_replace('CONTENT_TYPE_NAME', $bundle_name, $config_template_content);

        // Parse real config template conten to data and save new message value.
        $real_config_template_content_data = (array) Yaml::parse($real_config_template_content);
        $view_mode_config->setData($real_config_template_content_data)->save();
      }
    }
  }
}
